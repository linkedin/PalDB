apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'signing'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11
group = GROUP
version = VERSION_NAME

test {
  useTestNG()
}

sourceSets {

  perfTest {
    java.srcDir file('src/perfTest/java')
    resources.srcDir file('src/perfTest/resources')
    compileClasspath += sourceSets.main.output + test.output
    runtimeClasspath += sourceSets.main.output + test.output
  }

}

jar {
  from sourceSets.main.allSource
}

task perfTest(type: Test) {
  testClassesDirs = sourceSets.perfTest.output.classesDirs
  classpath = sourceSets.perfTest.runtimeClasspath
}

perfTest {
  useTestNG()

  maxHeapSize = "2g"
}

dependencies {
  compile 'org.xerial.snappy:snappy-java:1.1.7.3'
  compile 'org.slf4j:slf4j-api:1.7.28'

  testCompile 'org.testng:testng:7.0.0'
  testCompile 'commons-lang:commons-lang:2.6'
  testCompile 'ch.qos.logback:logback-classic:1.2.3'

  perfTestCompile configurations.testCompile

  // Only used for benchmark
  perfTestCompile 'org.fusesource.leveldbjni:leveldbjni-all:1.8'
  perfTestCompile 'org.rocksdb:rocksdbjni:4.0'
}

javadoc {
  options.overview = "overview.html"
}

jacocoTestReport {
  reports {
    html.enabled = false
    xml.enabled = true
  }
}

if (project.hasProperty('release')) {

  signing {
    sign configurations.archives
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives javadocJar, sourcesJar
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        // POM signature
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        // Target repository
        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: ossrhUser, password: ossrhPassword)
        }
        pom.project {
          group 'net.soundvibe.paldb'
          name 'paldb'
          description 'Embeddable persistent write-once key-value store'
          packaging 'jar'
          url 'https://github.com/soundvibe/PalDB'

          scm {
            connection 'scm:git@github.com:soundvibe/PalDB.git'
            developerConnection 'scm:git@github.com:soundvibe/PalDB.git'
            url 'https://github.com/soundvibe/PalDB'
          }

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id 'lnaginionis'
              name 'Linas Naginionis'
              email 'lnaginionis@gmail.com'
            }
          }
        }
      }
    }
  }
}